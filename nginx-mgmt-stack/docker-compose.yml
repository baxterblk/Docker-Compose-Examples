x-common-vars: &common-vars
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TZ}
  UMASK: ${UMASK}

x-common-opts: &common-opts
  restart: always
  networks:
    - npm
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"

services:
  # Infrastructure Services
  portainer_agent:
    <<: *common-opts
    container_name: portainer_agent
    image: portainer/agent:2.21.0
    environment:
      <<: *common-vars
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host

  watchtower:
    <<: *common-opts
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      <<: *common-vars
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_INCLUDE_RESTARTING: "true"
      WATCHTOWER_MONITOR_ONLY: "false"
      WATCHTOWER_POLL_INTERVAL: 300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  # Proxy and Authentication Services
  nginx-app:
    <<: *common-opts
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-app
    hostname: nginx
    environment:
      <<: *common-vars
      DB_MYSQL_HOST: "nginx-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${DB_MYSQL_USER}
      DB_MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'false'
      X_FRAME_OPTIONS: "sameorigin"
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
      - '21:21'
    volumes:
      - ${DOCKER_DATA_DIR}/nginx/data:/data
      - ${DOCKER_DATA_DIR}/nginx/letsencrypt:/etc/letsencrypt
      - ${DOCKER_DATA_DIR}/nginx/images:/mnt/images
      - ${DOCKER_DATA_DIR}/nginx/snippets:/snippets
    depends_on:
      - nginx-db
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s

  authelia:
    <<: *common-opts
    image: authelia/authelia
    hostname: authelia
    container_name: authelia
    volumes:
      - ${DOCKER_DATA_DIR}/authelia:/config
    environment:
      <<: *common-vars
      AUTHELIA_JWT_SECRET: ${AUTHELIA_JWT_SECRET}
      AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
      AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`${AUTHELIA_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://${AUTHELIA_SUBDOMAIN}.${DOMAIN}"

  # Database Services
  nginx-db:
    <<: *common-opts
    image: 'jc21/mariadb-aria:latest'
    container_name: nginx-db
    environment:
      <<: *common-vars
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - ${DOCKER_DATA_DIR}/nginx/db/mysql:/var/lib/mysql

  mariadb:
    <<: *common-opts
    container_name: mariadb
    hostname: mariadb
    image: mariadb:latest
    ports:
      - ${MARIADB_PORT}:3306
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_DATA_DIR}/organizr/mariadb:/var/lib/mysql
    environment:
      <<: *common-vars
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}

  nextcloud-db:
    <<: *common-opts
    image: mariadb:10.5
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ${DOCKER_DATA_DIR}/nextcloud/db:/var/lib/mysql
    environment:
      <<: *common-vars
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    hostname: nextcloud-db

  postgres-gitea:
    <<: *common-opts
    image: postgres:14
    container_name: postgres-gitea
    environment:
      <<: *common-vars
      POSTGRES_USER: ${GITEA_DB_USER}
      POSTGRES_PASSWORD: ${GITEA_DB_PASSWORD}
      POSTGRES_DB: ${GITEA_DB_NAME}
    volumes:
      - ${DOCKER_DATA_DIR}/gitea/postgres:/var/lib/postgresql/data

  nextcloud-redis:
    <<: *common-opts
    image: redis:alpine
    container_name: nextcloud-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${DOCKER_DATA_DIR}/nextcloud/redis:/data
    hostname: nextcloud-redis
    environment:
      <<: *common-vars

  # Web Applications
  organizr:
    <<: *common-opts
    container_name: organizr
    hostname: organizr
    image: ghcr.io/organizr/organizr
    ports:
      - ${ORGANIZR_PORT}:80
    volumes:
      - ${DOCKER_DATA_DIR}/organizr/config:/config
    environment:
      <<: *common-vars
      DB_TYPE: mysqli
      DB_HOST: mariadb
      DB_USER: ${MARIADB_USER}
      DB_PASS: ${MARIADB_PASSWORD}
      DB_NAME: ${MARIADB_DATABASE}
    depends_on:
      - mariadb

  nextcloud-app:
    <<: *common-opts
    image: nextcloud:latest
    container_name: nextcloud
    volumes:
      - ${DOCKER_DATA_DIR}/nextcloud/app:/var/www/html
      - ${DOCKER_DATA_DIR}/data:/mnt/data:rw
      - ${DOCKER_DATA_DIR}/backups:/mnt/backups:rw
    environment:
      <<: *common-vars
      MYSQL_HOST: nextcloud-db
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: nextcloud-redis
      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: storage.blakbox.vip
      OVERWRITEWEBROOT: /
      TRUSTED_PROXIES: 172.19.0.0/16 172.20.0.0/16 192.168.50.0/24
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    hostname: nextcloud-app

  gitea:
    <<: *common-opts
    image: gitea/gitea:latest
    hostname: gitea
    container_name: gitea
    environment:
      <<: *common-vars
      USER_UID: ${PUID}
      USER_GID: ${PGID}
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: postgres-gitea:5432
      GITEA__database__NAME: ${GITEA_DB_NAME}
      GITEA__database__USER: ${GITEA_DB_USER}
      GITEA__database__PASSWD: ${GITEA_DB_PASSWORD}
      GITEA__CUSTOM: /data/gitea
    volumes:
      - ${DOCKER_DATA_DIR}/gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${GITEA_HTTP_PORT}:3000"
      - "${GITEA_SSH_PORT}:22"
    depends_on:
      - postgres-gitea

  # Utility Services
  uptime-kuma:
    <<: *common-opts
    image: louislam/uptime-kuma:1
    hostname: uptime-kuma
    container_name: uptime-kuma
    volumes:
      - ${DOCKER_DATA_DIR}/kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      UPTIME_KUMA_DISABLE_FRAME_SAMEORIGIN: "true"
      UPTIME_KUMA_DISABLE_CSRF_CHECK: "true"
    ports:
      - ${UPTIME_KUMA_PORT}:3001

  bastillion:
    <<: *common-opts
    image: captcouch/bastillion-debian:latest
    container_name: bastillion
    environment:
      <<: *common-vars
      dbUser: ${BASTILLION_DB_USER}
      dbPassword: ${BASTILLION_DB_PASSWORD}
    volumes:
      - bastillion-app:/opt/Bastillion-jetty
    ports:
      - "8493:8443"

  firefox:
    <<: *common-opts
    image: jlesage/firefox
    hostname: firefox
    container_name: firefox
    ports:
      - "${FIREFOX_PORT}:5800"
    volumes:
      - ${DOCKER_DATA_DIR}/firefox/config:/config:rw
    environment:
      <<: *common-vars

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  bastillion-app:
    driver: local

networks:
  npm:
    external: true
